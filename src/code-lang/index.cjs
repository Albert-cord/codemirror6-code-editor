'use strict';

var lr = require('@lezer/lr');
var highlight = require('@lezer/highlight');
var language = require('@codemirror/language');

const javaHighlighting = highlight.styleTags({
  null: highlight.tags.null,
    instanceof: highlight.tags.operatorKeyword,
  this: highlight.tags.self,
  "new assert to with void": highlight.tags.keyword,
  "var def": highlight.tags.definitionKeyword,
  "module package import": highlight.tags.moduleKeyword,
  "switch while foreach if else case default do break continue return try catch finally throw": highlight.tags.controlKeyword,
  ["requires exports uses provides public private protected static transitive abstract final " +
   "strictfp synchronized native transient volatile throws"]: highlight.tags.modifier,
  IntegerLiteral: highlight.tags.integer,
  FloatingPointLiteral: highlight.tags.float,
  "StringLiteral TextBlock": highlight.tags.string,
  CharacterLiteral: highlight.tags.character,
  LineComment: highlight.tags.lineComment,
  BlockComment: highlight.tags.blockComment,
  BooleanLiteral: highlight.tags.bool,
  PrimitiveType: highlight.tags.standard(highlight.tags.typeName),
  TypeName: highlight.tags.typeName,
  Identifier: highlight.tags.variableName,
  "MethodName/Identifier": highlight.tags.function(highlight.tags.variableName),
  Definition: highlight.tags.definition(highlight.tags.variableName),
  ArithOp: highlight.tags.arithmeticOperator,
  LogicOp: highlight.tags.logicOperator,
  BitOp: highlight.tags.bitwiseOperator,
  CompareOp: highlight.tags.compareOperator,
  AssignOp: highlight.tags.definitionOperator,
  UpdateOp: highlight.tags.updateOperator,
  Asterisk: highlight.tags.punctuation,
  Label: highlight.tags.labelName,
  "( )": highlight.tags.paren,
  "[ ]": highlight.tags.squareBracket,
  "index_define_begin index_define_end": highlight.tags.brace,
  "index_def_begin index_def_end": highlight.tags.brace,
  "expression_define_begin expression_define_end": highlight.tags.brace,
  "{ }": highlight.tags.brace,
  ".": highlight.tags.derefOperator,
  ", ;": highlight.tags.separator
});

// This file was generated by lezer-generator. You probably shouldn't edit it.
const spec_identifier = {__proto__:null,def:12, true:46, false:46, null:54, this:56, new:62, void:66, byte:68, short:68, int:68, long:68, char:68, float:68, double:68, boolean:68, extends:88, super:90, instanceof:142, public:182, protected:184, private:186, abstract:188, static:190, final:192, strictfp:194, default:196, synchronized:198, native:200, transient:202, volatile:204, import:210, if:222, else:224, while:228, foreach:232, var:239, index_def_begin:246, index_def_end:248, index_define_begin:252, index_define_end:254, expression_define_begin:258, expression_define_end:260, assert:264, switch:268, case:274, do:278, break:282, continue:286, return:290};
const parser$1 = lr.LRParser.deserialize({
  version: 14,
  states: "!+SQ]QPOOO&eQQO'#CcO(lQQO'#CcOOQO'#Cj'#CjO(sQPO'#CiO({OSO'#CvOOQO'#GU'#GUO+QQPO'#CyOOQO'#DP'#DPO-[QQO'#G`O-cQQO'#G`OOQO'#G`'#G`O-jQPO'#G^OOQO'#G_'#G_O/]QPO'#ChOOQO'#G^'#G^OOQO'#Cz'#CzO/dQQO'#GSO2tQQO'#D`O2{QPO'#D_O3QQPO'#DaOOQO'#GT'#GTO1QQQO'#GTO4WQQO'#EkO4_QPO'#D}O4fQPO'#DvO4kQPO'#ERO4kQPO'#ETOOQO'#GS'#GSOOQO'#F}'#F}OOQO'#Fe'#FeO5{QPO'#FqO8TQPO'#ChOOQO'#Fy'#FyO8[QPO'#ElO8aQPO'#EvOOQO'#Fx'#FxOOQO'#Fd'#FdQ]QPOOO8rQPO'#GYO9TQQO'#DaOOQO'#Gp'#GpO9]QPO'#GpO9bQPO'#CaO9jQPO'#EhO9uQPO'#EnO9uQPO'#EqO9bQPO'#EvO9zQPO'#EsO:PQPO'#EzO:WQPO'#E}O:_QPO'#FQO4kQPO'#FTO9uQPO'#FVO]QPO'#F[O:fQPO'#F^O:qQPO'#F`O:|QPO'#FbOOQO'#GQ'#GQO;lQQO,59TOOQO'#GP'#GPOOOO'#Ff'#FfO<rOSO,59bOOQO,59b,59bO>zQQO'#CcOAbQQO'#CcOAxQQO,59eOBbQPO'#G^O-{QPO'#ChOBrQPO,5:rOB}QPO'#DyOC]QPO'#GiOCeQPO,5:cODnQPO,5:cODuQPO'#GlOEQQPO,5:hOOQO,59m,59mODcQPO,59lOEkQPO'#C|OOQO'#Cc'#CcOErQPO'#DUOEwQPO'#DUOOQO'#Fg'#FgOFeQPO,59nOFxQPO'#GjOGaQPO'#D{OGoQPO'#GqOGwQPO,5;bOOQO'#Ga'#GaOHbQPO,59rOOQO-E9c-E9cOI^QPO,59SOJSQPO,59fO4kQPO,59xOJZQPO,59{O4kQPO,59ZOJiQPO'#D]OOQO,59y,59yOOQO'#Dj'#DjOOQO'#Dm'#DmO4kQPO,5:SO4kQPO,5:SO4kQPO,5:SO4kQPO,5:SO4kQPO,5:SO4kQPO,5:SO4kQPO,5:SO4kQPO,5:SO4kQPO,5:SO4kQPO,5:jOOQO,5:m,5:mOOQO,5;V,5;VOJpQPO,5:`OOQO,5:i,5:iOKRQPO,5:iOKYQPO,5:bOKaQPO'#G^OJpQPO'#DWOKkQQO,5:oOMOQPO,5<]OOQO-E9o-E9oO]QPO,5;WONVQPO,5;bO9bQPO,5;bOOQO-E9b-E9bONeQPO,5<tOB}QPO,5<tOIqQPO,59[OOQO,5=[,5=[ONpQPO,58{ONuQQO,5;SO(sQPO,5;SO4kQPO'#CyO]QPO,5;YO]QPO,5;]ON}QPO'#EuO]QPO,5;_O]QPO,5;dO! _QPO,5;fOOQO,5;f,5;fO! fQPO,5;iOOQO,5;i,5;iO! mQPO,5;lOOQO,5;l,5;lO! tQQO,5;oO!!OQPO,5;qO!!TQPO,5;vOOQO'#Em'#EmOOQO,5;x,5;xO!!YQPO,5;xOOQO,5;z,5;zO!!_QPO,5;zO!!dQQO,5;|OOQO,5;|,5;|O(sQPO,59VO!!kQPO'#CnOOQO1G.s1G.sOOOO-E9d-E9dOOQO1G.|1G.|OOQO1G/P1G/PO!!uQQO'#CcO!#WQQO'#CcOOQO,5:e,5:eO9bQPO,5:fOOQO,5:d,5:dO!#iQQO,5:dO!#nQPO,59rOJpQPO'#FnO!$YQPO1G0^O4kQPO1G0^O!$bQPO,5:eOCjQPO'#FlO!$sQPO,5=TOOQO1G/}1G/}O!${QPO'#DyO!%^QPO1G/}O!%cQPO'#ChO9bQPO'#FmO!%jQPO,5=WOOQO1G0S1G0SOOQO1G/W1G/WODcQPO1G/WO!&TQPO'#DWO!&[QPO'#DXO!&jQPO'#G]O!&rQPO,59hOOQO,59p,59pO!&wQPO,59pOOQO-E9e-E9eO!&|QPO,5=UO!'eQPO,5:gO9bQPO'#FsO!'lQPO,5=]OOQO1G0|1G0|OOQO1G/Q1G/QO!'tQQO1G.vO2{QPO1G/eO(sQPO1G/eO8rQPO'#GYO!)kQQO1G.vOOQO1G.v1G.vO!)pQQO1G/dOOQO1G/g1G/gO!)wQPO1G/gO!*SQQO1G.uO!*jQQO'#GdO!*wQPO,59wO!,ZQQO1G/nO!-uQQO1G/nO!-|QQO1G/nO!/eQQO1G/nO!/lQQO1G/nO!0qQQO1G/nO!2lQQO1G/nO!2sQQO1G/nO!2zQQO1G/nO!3UQQO1G0UO!3]QQO'#G^OOQO1G/z1G/zOOQO1G0T1G0TO!4vQQO1G/|OOQO1G/|1G/|OOQO1G0r1G0rO!5^QPO1G0|O!5cQPO'#DcO!5jQPO'#DcOOQO'#Fj'#FjO!5rQQO1G/hOOQO1G2`1G2`O2{QPO1G2`O!7fQPO1G.gO!7nQPO1G0nOOQO1G0n1G0nO!7yQQO1G0nO!8RQPO1G0tOOQO1G0w1G0wO-jQPO,5;eO8aQPO,5;eO!;pQPO,5;aO!;wQPO,5;aOOQO1G0y1G0yOOQO1G1O1G1OOOQO1G1Q1G1QOOQO1G1T1G1TOOQO1G1W1G1WOOQO1G1Z1G1ZO4kQPO1G1ZO!?XQPO'#FXOOQO1G1]1G1]O9uQPO1G1bOOQO1G1d1G1dOOQO1G1f1G1fOOQO1G1h1G1hOOQO1G.q1G.qO!?`QQO'#D`O!@vQQO'#GRO!ATQPO'#EXOOQO'#GR'#GRO!A_QPO'#GRO!AyQPO'#GoO!BRQPO,59YOOQO1G0Q1G0QO!BWQPO1G0OOOQO1G0O1G0OO!B]QQO1G0OOOQO,5<Y,5<YOOQO-E9l-E9lO4kQPO7+%xOOQO7+%x7+%xOOQO1G0P1G0PO9bQPO1G0QOOQO,5<W,5<WOOQO-E9j-E9jOOQO7+%i7+%iOOQO,5<X,5<XOOQO-E9k-E9kOOQO7+$r7+$rO!BbQWO,59TO!BiQPO,59sOOQO,59s,59sOJpQPO'#GcOEVQPO'#FhO!BwQPO,5<wOOQO1G/S1G/SOOQO1G/[1G/[O!CPQQO'#GgOOQO'#Gg'#GgO!CaQPO'#DeOOQO1G0R1G0ROOQO,5<_,5<_OOQO-E9q-E9qOOQO7+%P7+%POOQO'#D`'#D`O2{QPO7+%PO2{QPO,5<tO!CkQPO7+$bOOQO7+%O7+%OOOQO7+%R7+%RO4kQPO'#FiO!CyQPO,5=OOOQO1G/c1G/cO4kQPO7+%pO!DUQQO,59nO!E_QQO,59rOOQO7+&h7+&hOOQO,59},59}O!FhQQO,59}O!FoQPO,59}OOQO-E9h-E9hOOQO7+%S7+%SOOQO7+'z7+'zO!FvQPO'#CfO!G^QPO7+$RO!GcQPO7+$RO!GhQPO7+&YO!GmQPO7+&YOOQO7+&Y7+&YO]QPO7+&`O!GxQPO1G1PONVQPO1G1PO!HWQQO1G0{OJiQPO1G0{O!H_QPO1G0{O!HfQQO7+&uOOQO'#Ft'#FtO!HmQPO,5;sOOQO,5;s,5;sO!HtQPO'#GpO4kQPO'#FYO!H|QPO7+&|O!IRQPO,59ZO!IYQPO'#GnO!IbQPO,5:sO(sQPO'#FpO!IgQPO,5=ZOOQO1G.t1G.tOOQO7+%j7+%jO!IoQPO7+%jOOQO<<Id<<IdOOQO7+%l7+%lOOQO1G/_1G/_OOQO,5<},5<}OOQO,5<S,5<SOOQO-E9f-E9fO!ItQPO'#GfO!I|QPO,5:POOQO<<Hk<<HkO!JRQQO<<G|O2{QPO<<HkO(sQPO<<HkOOQO<<G|<<G|O!KxQQO,5<TOOQO-E9g-E9gO!LVQQO<<I[OOQO1G/i1G/iO!LmQQO1G/iO!LtQQO'#CcO!McQQO'#CcO!NQQPO'#DzO!N]QPO'#CgOOQO'#Cg'#CgO!NkQPO'#F|O!NsQPO,59QO!NxQPO<<GmO# PQPO<<GmOOQO<<It<<ItO# UQPO<<ItOOQO<<Iz<<IzO4kQPO7+&kO# ZQPO7+&kOJiQPO7+&gO# iQPO7+&gO# nQQO7+&gOOQO<<Ja<<JaOOQO-E9r-E9rOOQO1G1_1G1_OOQO,5;t,5;tO# uQQO,5;tOOQO<<Jh<<JhO# |QQO1G.uOOQO1G0`1G0`O#!WQPO'#FoO#!eQPO,5=YOOQO1G0_1G0_O#!mQPO'#EYOOQO,5<[,5<[OOQO-E9n-E9nOOQO<<IU<<IUO#!rQPO'#FkO##PQPO,5=QOOQO1G/k1G/kOOQOAN>VAN>VO2{QPOAN>VOOQO7+%T7+%TO##XQPO,5:fOOQO,59R,59RO##dQPO'#FrO##wQPO,5<hOOQO1G.l1G.lO#$PQPOAN=XOOQOAN=XAN=XO#$PQPOAN=XOOQOAN?`AN?`O#$WQQO<<JVO4kQPO<<JVO#$_QPO<<JROOQO<<JR<<JROJiQPO<<JROOQO1G1`1G1`OOQO,5<Z,5<ZOOQO-E9m-E9mO!IRQPO,5:tOOQO,5<V,5<VOOQO-E9i-E9iOOQOG23qG23qOOQO,5<^,5<^OOQO-E9p-E9pOOQOG22sG22sO#$dQPOG22sOOQOAN?qAN?qO#$kQQOAN?qOOQOAN?mAN?mO#$rQPOAN?mOOQOLD(_LD(_OOQOG25]G25]OOQOG25XG25XO(sQPO'#CiO#$wQQO'#CcO#%[QQO'#CcOJpQPO'#DW",
  stateData: "#%w~OPOSQOS$kOS~OU{OWVOeUOfUOgUOhUOiUOkUOleOowOqZOrZO}xO!WhO!dkO!vjO!xkO!ykO!}yO#OyO#PyO#QyO#RyO#SyO#TyO#UzO#WyO#XyO#YyO#ZtO#]|O#c}O#f!OO#h!QO#k!PO#o!RO#r!SO#u!TO#x!UO#z!VO$P!WO$R!XO$T!YO$V!ZO$nPO$oQO$rSO$zTO~OW^X`^X`%TXy^Xy%TX!Y^X!Z^X!]^X!_^X!`^X!b^X!c^X!d^X!e^X!f^X!g^X!i^X!s^X!v^X#Z^X$n%TX$o%TX$r%TX$}^X%O^X%O%TX%X^X%X%TX%[^X%aVX~O!t#aX~P$eOW$tX`sX`$tXysXy$tX!Y$tX!Z$tX!]$tX!_$tX!`$tX!b$tX!c$tX!d$tX!e$tX!f$tX!g$tX!i$tX!s$tX!v$tX#Z$tX$nsX$osX$rsX$}$tX%OsX%O$tX%XsX%X$tX%[$tX%aVX~O!t#aX~P&lO$nRO$o![O~O$y!aO${!_O~OWVOeUOfUOgUOhUOiUOkUOleOowOqZOrZO}xO!dkO!vjO!xkO!ykO!}yO#OyO#PyO#QyO#RyO#SyO#TyO#UzO#WyO#XyO#YyO$rSO$zTO~O$n!bO$o!cOX%]P~P)TO`!oOy%SX$n%SX$o%SX$r%SX%X%SXX%SXl%SX%[%SX%_%SXW%SX!O%SX$}%SX!]%SX!_%SX!`%SX!b%SX!c%SX!d%SX!e%SX!f%SX!g%SX!i%SX!s%SX!v%SX#Z%SX!t%SXw%SXS%SX~O%O!pO~P+_O%O%SX~P+_Oy!rO$n!qO$o!qO$rSO%X%QX~OqZOrZO!}yO#OyO#PyO#QyO#RyO#SyO#TyO#UzO#WyO#XyO#YyO$n!zO$oWO$rSOq[Xr[X$n[X$o[X~O#k[X~P-{O`#OOy#PO%X#QO!]$vX!_$vX!`$vX!b$vX!c$vX!d$vX!e$vX!f$vX!g$vX!i$vX!s$vX!v$vX#Z$vX$}$vX%O$vX%[$vXX$vX!t$vXw$vX!O$vXS$vX~O!Y#RO!Z#RO`$wXy$wX!]$wX!_$wX!`$wX!b$wX!c$wX!d$wX!e$wX!f$wX!g$wX!i$wX!s$wX!v$wX#Z$wX$}$wX%O$wX%X$wX%[$wXX$wX!t$wXw$wX!O$wXS$wX~OW!SX~P1QOW#SO~O%X#QO~O!]#WO!_#XO!`#YO!b#[O!c#]O!d#^O!e#_O!f#`O!g#`O!i#dO!s#aO!v#bO$}#UO%O#UO%[#VO~O#Z#cO~P3VOS#eO~P]O%a#gO~OWVOeUOfUOgUOhUOiUOkUOleOowOqZOrZO}xO!dkO!vjO!xkO!ykO$n*]O$o*^O$rSO$zTO~O$rSOq$eXr$eX!}$eX#O$eX#P$eX#Q$eX#R$eX#S$eX#T$eX#U$eX#W$eX#X$eX#Y$eX#k$eX$n$eX$o$eX~O!}yO#OyO#PyO#QyO#RyO#SyO#TyO#UzO#WyO#XyO#YyOq[Xr[X$n[X$o[X~O#k[X~P7SO!t#mO~OqZOrZO#k#oO$n!zO$oWO~OqZOrZO$n!zO$oWO%O!pO~O`#sO%X#QO~O#V#tO~O$n!qO$o!qO~O#R#wO$nRO$o![O~OW#xO~OW#{O~O#p$PO~P]O#s$RO~P]O#v$TO~P]O#Z$YO$n$XO$o$XO~O#Z$[O$n$XO$o$XO~O#Z$_O~P4kOW$aO`$`Oq]ar]a$n]a$o]a$r]a~O!}]a#O]a#P]a#Q]a#R]a#S]a#T]a#U]a#W]a#X]a#Y]a#k]ay]aX]aS]a!O]a~P;TO$y$dO${!_O~OW^XX^X`^X`%TXy^Xy%TX!Y^X!Z^X!]^X!_^X!`^X!b^X!c^X!d^X!e^X!f^X!g^X!i^X!s^X!v^X$n%TX$o%TX$r%TX$}^X%O^X%O%TX%X^X%X%TX%[^X%aVX~OXVXX%TXl%TX!OVX%[%TX%_%TX~P<zOW$tXX$tX`sX`$tXysXy$tX!Y$tX!Z$tX!]$tX!_$tX!`$tX!b$tX!c$tX!d$tX!e$tX!f$tX!g$tX!i$tX!s$tX!v$tX$nsX$osX$rsX$}$tX%OsX%O$tX%XsX%X$tX%[$tX%aVX~OXVXXsXlsX!OVX%[sX%_sX~P?bOX$eO~P3VOy!rO$rSOX%QX%X%QX%[%QX~Ol$jO$n$fO$o$gO%_$iO~PBPOX$oO%X#QO%[$mO~OqZOrZO$n!zO$oWO~O!O$qOX%]X~OX$sO~OqZOrZO!}yO#OyO#PyO#QyO#RyO#SyO#TyO#UzO#WyO#XyO#YyO$n!zO$oWO$rSO~OX%]P~PCjO!O$wO%a#gOX%`X~OX$yO~OqZOrZO$n!zO$oWO$r*[O%U$}O~O$}%PP~PEVOw%QO~Oy%RO$rSO~Oy!rO$rvaXva%[va!Ova$}va~O$nva$ova%Xvalva%_va~PFPOy!rO$rSO!O%^X!Z%^X#Z%^XX%^X!t%^X~O!Z%UO!O!oX#Z!oXX!oX~O!O%VO#Z%eX~O#Z%XO~Oy!rO$rSO!Oza$}zaXza%[za~O%Xza~PG|O!}yO#OyO#PyO#QyO#RyO#SyO#TyO#UzO#WyO#XyO#YyO~Oq[ar[a#k[a$n[a$o[a~PHiOl%`O}%_O$nRO$o![O%O!pO~Oo%^O~PIqOo%bO$nRO$o![O%O!pO~OX%WP~P4kOqZOrZO$n!zO$oWO$rSO~OS%sO~P]O!WhO~P4kO!O%QX$}%QX~PBPO!v#bO!]!wa!_!wa!`!wa!b!wa!c!wa!d!wa!e!wa!f!wa!g!wa!i!wa!s!wa#Z!wa$}!wa%O!wa%[!waX!wa!t!waw!wa!O!waS!wa~O$rSOq$ear$ea!}$ea#O$ea#P$ea#Q$ea#R$ea#S$ea#T$ea#U$ea#W$ea#X$ea#Y$ea#k$ea$n$ea$o$ea~Oy!rO$n!qO$o!qO$rSO~OW#SOy%xO$rSO~OW&OO~O`&PO#Z&QO~O#k!PO$n*]O$o*^O#Z%WP~P)TO#p&[O~P]O#s&]O~P]O#v&^O~P]O!t&`O#Z&_O~P3VO!W&aO~O#f&cO~O#Z&dO~O#Z&eO~O#Z&fO~P3VO!W&jOX%cP~P4kOXVX`^XyVX!OVX$rVX~OXVX`$tXyVX!OVX$rVX~O`&pO~Ol&qOy!rO$nRO$o![O$rSOXza%Xza%[za~OX&uO%[$mO~Oy!rO$n!qO$o!qO$rSO%_&xO~O!O$qOX%]a~Oy!rO$n!qO$o!qO$rSO%_$iO~OX&{O~O$rSO~P7SO!O$wOX%`a~OqZOrZO$n!zO$oWO$r*[O~O%U'QO~P!%rO|'SO}'SO!O{X$}{X~O!O'TO$}%PX~O$}'VO~Ow'WO~Oy!rO$rSO!O%^a!Z%^a#Z%^aX%^a!t%^a~O!W'ZO~P4kO!O%VO#Z%ea~OW!SX`diydi!Ydi!Zdi!]di!_di!`di!bdi!cdi!ddi!edi!fdi!gdi!idi!sdi!vdi#Zdi$}di%Odi%Xdi%[diXdi!tdiwdi!OdiSdi~O`'cO~Ow'dO~P3VOo'eO$nRO$o![O~O#ZciXci!tciwci!OciSci~P3VO!O'fOX%WX#Z%WX~P3VOX'hO~O!d#^O!e#_O!i#dO!v#bO!]![i!_![i!`![i!b![i!c![i!s![i#Z![i$}![i%O![i%[![iX![i!t![iw![i!O![iS![i~O!f#`O!g#`O~P!*|O!]#WO!b#[O!c#]O!d#^O!e#_O!f#`O!g#`O!i#dO!v#bO$}#UO%O#UO%[#VO!`![i!s![i#Z![iX![i!t![iw![i!O![iS![i~O!_![i~P!,eO!_#XO~P!,eO!]#WO!d#^O!e#_O!f#`O!g#`O!i#dO!v#bO$}#UO%O#UO!_![i!`![i!b![i!c![i!s![i#Z![iX![i!t![iw![i!O![iS![i~O%[![i~P!.TO%[#VO~P!.TO!d#^O!e#_O!i#dO!v#bO!_![i!`![i!c![i!s![i#Z![iX![i!t![iw![i!O![iS![i~O!]#WO!b#[O!f#`O!g#`O$}#UO%O#UO%[#VO~P!/sO!i#dO!v#bO!]![i!_![i!`![i!b![i!c![i!d![i!f![i!g![i!s![i#Z![i$}![i%O![i%[![iX![i!t![iw![i!O![iS![i~O!e#_O~P!1[O!e![i~P!1[O!f![i!g![i~P!*|O!t'iO~P3VOy!rO$rSO!]%QX!_%QX!`%QX!b%QX!c%QX!d%QX!e%QX!f%QX!g%QX!i%QX!s%QX!v%QX#Z%QX$}%QX%O%QX%[%QXX%QX!t%QXw%QX!O%QXS%QX~O#Z!jiX!ji!t!jiw!ji!O!jiS!ji~P3VO#Z'lO~Ow'mO~P4kOy'oO$rSO~Oy%xO!W'ZO$rSO`!Ui!]!Ui!_!Ui!`!Ui!b!Ui!c!Ui!d!Ui!e!Ui!f!Ui!g!Ui!i!Ui!s!Ui!v!Ui#Z!Ui$}!Ui%O!Ui%X!Ui%[!UiX!Ui!t!Uiw!Ui!O!UiS!Ui~OW'sOX'tO~O#^'vO$nRO$o![O~O`'wO#Z'xO~O#d'yOU#biW#bie#bif#big#bih#bii#bik#bil#bio#biq#bir#bi}#bi!W#bi!d#bi!v#bi!x#bi!y#bi!}#bi#O#bi#P#bi#Q#bi#R#bi#S#bi#T#bi#U#bi#W#bi#X#bi#Y#bi#Z#bi#]#bi#c#bi#f#bi#h#bi#k#bi#o#bi#r#bi#u#bi#x#bi#z#bi$P#bi$R#bi$T#bi$V#bi$i#bi$n#bi$o#bi$r#bi$z#biS#bi#p#bi#s#bi#v#bi#}#bi~O#Z'}O~P4kO#Z(OO~OU{OWVOeUOfUOgUOhUOiUOkUOleOowOqZOrZO}xO!WhO!dkO!vjO!xkO!ykO!}yO#OyO#PyO#QyO#RyO#SyO#TyO#U(TO#WyO#XyO#YyO#ZtO#]|O#c}O#f!OO#h!QO#k!PO#o!RO#r!SO#u!TO#x!UO#z!VO#}(UO$P!WO$R!XO$T!YO$V!ZO$nPO$oQO$rSO$zTO~OS(SO~P!;|O!Y#RO!Z(WOW!SXX$wX`$wXy$wX!]$wX!_$wX!`$wX!b$wX!c$wX!d$wX!e$wX!f$wX!g$wX!i$wX!s$wX!v$wX$}$wX%O$wX%X$wX%[$wX~OX$uXS$uX!O$uX~P3VO!W&jOS%bP~P4kOX$uXq$XXr$XX$n$XX$o$XX$r$XXS$uX!O$uX~O!O(ZOX%cX~OX(]O~Ol(^O~O`(_O~O%U]a~P;TO|'SO}'SO!O{a$}{a~O!O'TO$}%Pa~O!O%ZX#Z%ZXS%ZXX%ZX~P3VO!W'ZOS%YP~P4kOl(lO$nRO$o![O%O!pO~O!O'fOX%Wa#Z%Wa~O!]va!_va!`va!bva!cva!dva!eva!fva!gva!iva!sva!vva#Zva%Ova!tvawvaSva~PFPO!]za!_za!`za!bza!cza!dza!eza!fza!gza!iza!sza!vza#Zza%Oza!tzawzaSza~PG|Ow(pO~P3VOw(pO~P4kOqZOrZO$n(rO$o(sO$rSOX$pP~PHiO!W(yO~OX(zO~O#Z({O~O#^(|O$nRO$o![O~O!Z%UO!t)OO!O!oX#Z!oX~O#Z)QO~P3VO#Z)QO~P4kO#Z)TO~P3VOS)VO~P!;|O!t)WO#V#tO~O#Z)YO~O!W&jO~P4kO!O)]OS%bX~OS)_O~O!O(ZOX%ca~Ol)cO~O!O)dOS%YX~OS)fO~OW!SX`dyydy!Ydy!Zdy!]dy!_dy!`dy!bdy!cdy!ddy!edy!fdy!gdy!idy!sdy!vdy#Zdy$}dy%Ody%Xdy%[dyXdy!tdywdy!OdySdy~OX$]a!O$]a#Z$]a~P3VO#Z!ryX!ry!t!ryw!ry!O!ryS!ry~P3VOw)iO~P3VOXVX`%TXyVXy%TX!OVX$rVX$r%TX%O%TX%_%TX~OXVX`sXyVXysX!OVX$rVX$rsX%OsX%_sX~Oy!rO$rSO%_$iO~OqZOrZO$n(rO$o(sO~O!O)lOX$pX~OX)nO~OS)pO~P]O!W)qO~O#Z)rO~O!Z%UO!t)tO!O!oX#Z!oX~OX)vO~O#Z)wO~P3VO!t)xO~P3VOX$uX!O$uX~P3VO!W&jOS$cX!O$cX~P4kO!O)]OS%ba~O!Z){O~O!W'ZOS$_X!O$_X~P4kO!O)dOS%Ya~Oy!rO$rSO%_&xO~OqZOrZO$n(rO$o(sO$rSO~PHiO!O)lOX$pa~OS*RO~P]OX*TO~P3VOX*VO~OS*XO~P]OX*YO~P3VOX*ZO~O!t^XX^Xw^X!O^XS^X~P$eO!t$tXX$tXw$tX!O$tXS$tX~P&lOfQeP!e$zi~",
  goto: "!8w%fPPPPP%gP&QPP(S(V(])S+d-tP)S-z.O/gPPPPP1OPP2g4[P5sPP6U8Y:W<UP>PP>e@RPPP@X/g4[@o4[4[BePBiPP.OPBqPPC`PPPPPP.OP.OC|EeEhEoE|C|F_.OPP.OP.OPP.OF{GSPPPPPPPPPPPPP%gPPGYGYGsGYPPGYPGYPHdHgPGYITGYPPGYPPGYPPGYPGYPIWIZPGYPGYPGYPGYPI_I}LsLyMeMkMqMwM}NTNZNaNgNm! g! m! sPPP! yGYPP!!t!!wP!%Z!%g!'a!'n!*m4[PPP!,UPP!-p!-s!/m!2S!4WP!6W!6^P!6m!6pP!6y!7PP!7nP!7q!7t!7w!8m!PqOhv!R!S!T!W#f#m#y#z#|#}$O$Q$S&a'y(R(y)o)q*S#xiOhjkv!R!S!T!U!W!Z#P#R#S#W#X#Y#Z#[#]#^#_#`#a#f#g#m#x#y#z#{#|#}$O$Q$S$a$o%U%x&W&`&a&j&u'Z'f'i'o'y'}(O(R(U(W(y)O)Q)])d)o)q)t)w){*SQ!lVn!v[!P!e#n#o$i$p$t%V&U&x's'{(u)lQ#u{R&|$wR'u&OQ(w'sR*P)l!OsOhv!R!S!T!W#f#m#y#z#|#}$O$Q$S&a'y(R(y)o)q*SU!hV!k$qQ&V#{T(u's)l%mmOV[^hjkov!R!S!T!U!W!Z!e!f!k!o!p!s!v!{#P#R#S#W#X#Y#Z#[#]#^#_#`#a#d#f#g#h#i#k#m#n#q#x#y#z#{#|#}$O$Q$S$a$l$m$o$p$q$t$v${$|%T%U%q%x%y%{&U&W&`&a&j&u'S'T'Z'f'i'k'o's'y'{'}(O(R(U(W(t(y)O)Q)])d)j)l)o)q)t)w){*S*_#xbOVhjkv!R!S!T!U!W!Z#P#R#S#W#X#Y#Z#[#]#^#_#`#a#f#g#m#x#y#z#{#|#}$O$Q$S$o%U%x&W&`&a&j&u'Z'f'i'o'y'}(O(R(U(W(y)O)Q)])d)o)q)t)w){*SW!^S|#w*[Q$k!eS%Z#O#sQ%b#QU&g$`&P'wQ&h$aQ&r$lS'`%](kQ'e%cQ(i'cR)`(ZX!^S|#w*[T$b!]'P#{lOVhjkv!R!S!T!U!W!Z#P#R#S#W#X#Y#Z#[#]#^#_#`#a#f#g#m#x#y#z#{#|#}$O$Q$S$a$o%U%x&W&`&a&j&u'Z'f'i'o'y'}(O(R(U(W(y)O)Q)])d)o)q)t)w){*S#{fOVhjkv!R!S!T!U!W!Z#P#R#S#W#X#Y#Z#[#]#^#_#`#a#f#g#m#x#y#z#{#|#}$O$Q$S$a$o%U%x&W&`&a&j&u'Z'f'i'o'y'}(O(R(U(W(y)O)Q)])d)o)q)t)w){*S#{UOVhjkv!R!S!T!U!W!Z#P#R#S#W#X#Y#Z#[#]#^#_#`#a#f#g#m#x#y#z#{#|#}$O$Q$S$a$o%U%x&W&`&a&j&u'Z'f'i'o'y'}(O(R(U(W(y)O)Q)])d)o)q)t)w){*S#zeOVhjkv!R!S!T!U!W!Z#P#R#S#W#X#Y#Z#[#]#^#_#`#a#f#g#m#x#y#z#{#|#}$O$Q$S$a$o%U%x&W&`&a&j&u'Z'f'i'o'y'}(O(R(U(W(y)O)Q)])d)o)q)t)w){*SQ#y}Q#z!OQ$V!VR(V&c#{eOVhjkv!R!S!T!U!W!Z#P#R#S#W#X#Y#Z#[#]#^#_#`#a#f#g#m#x#y#z#{#|#}$O$Q$S$a$o%U%x&W&`&a&j&u'Z'f'i'o'y'}(O(R(U(W(y)O)Q)])d)o)q)t)w){*SQ!nXS#rw%^S%]#O#sQ%c#QR(k'c$vXOV^hjksvw!R!S!T!U!W!Z!f!h!k!p#P#R#S#W#X#Y#Z#[#]#^#_#`#a#d#f#g#i#m#r#x#y#z#{#|#}$O$Q$S$a$m$o$q$|%U%^%x&V&W&`&a&j&u'S'T'Z'f'i'o's'y'}(O(R(U(W(u(y)O)Q)])d)l)o)q)t)w){*S*_Q$z!oR'O${$wXOV^hjksvw!R!S!T!U!W!Z!f!h!k!p#P#R#S#W#X#Y#Z#[#]#^#_#`#a#d#f#g#i#m#r#x#y#z#{#|#}$O$Q$S$a$m$o$q$|%U%^%x&V&W&`&a&j&u'S'T'Z'f'i'o's'y'}(O(R(U(W(u(y)O)Q)])d)l)o)q)t)w){*S*_$wYOV^hjksvw!R!S!T!U!W!Z!f!h!k!p#P#R#S#W#X#Y#Z#[#]#^#_#`#a#d#f#g#i#m#r#x#y#z#{#|#}$O$Q$S$a$m$o$q$|%U%^%x&V&W&`&a&j&u'S'T'Z'f'i'o's'y'}(O(R(U(W(u(y)O)Q)])d)l)o)q)t)w){*S*_$q]OV^hjksv!R!S!T!U!W!Z!f!h!k!p#P#R#S#W#X#Y#Z#[#]#^#_#`#a#d#f#g#i#m#x#y#z#{#|#}$O$Q$S$a$m$o$q$|%U%x&V&W&`&a&j&u'S'T'Z'f'i'o's'y'}(O(R(U(W(u(y)O)Q)])d)l)o)q)t)w){*S*_u!t[!e!u!v!{#h#n$l$p$t%T%q&U'j'k'{(t)j$V_OVhjkv!R!S!T!U!W!Z!p#P#R#S#W#X#Y#Z#[#]#^#_#`#a#d#f#g#m#x#y#z#{#|#}$O$Q$S$a$m$o%U%x&W&`&a&j&u'S'T'Z'f'i'o'y'}(O(R(U(W(y)O)Q)])d)o)q)t)w){*SQ%O!pR(d'TQ#TcS%|#q'bQ'_%[Q'r%}Q(h'aQ)g(jR*O)h#zcOVhjkv!R!S!T!U!W!Z#P#R#S#W#X#Y#Z#[#]#^#_#`#a#f#g#m#x#y#z#{#|#}$O$Q$S$a$o%U%x&W&`&a&j&u'Z'f'i'o'y'}(O(R(U(W(y)O)Q)])d)o)q)t)w){*SS%[#O#sQ'a%]Q(j'cR)h(kT%z#q%{U'Y%U'Z)dR'q%{!X#Wg!d$U$^%a%d%e%h%i%j%k%l%p%t&i'X'n'|(P(m(o(q)S)X)Z)s*U!V#Zg!d$U$^%a%d%e%h%i%k%l%p%t&i'X'n'|(P(m(o(q)S)X)Z)s*U#{iOVhjkv!R!S!T!U!W!Z#P#R#S#W#X#Y#Z#[#]#^#_#`#a#f#g#m#x#y#z#{#|#}$O$Q$S$a$o%U%x&W&`&a&j&u'Z'f'i'o'y'}(O(R(U(W(y)O)Q)])d)o)q)t)w){*SR!kVS!iV!kR&y$qS!iV!kQ&y$qQ(w'sR*P)l[!x[!P#n#o&U'{Q&o$iQ']%VR(a&x!OtOhv!R!S!T!W#f#m#y#z#|#}$O$Q$S&a'y(R(y)o)q*SR%u#gZ&k$a&j(W)]){Q&m$aR)a(Z!PtOhv!R!S!T!W#f#m#y#z#|#}$O$Q$S&a'y(R(y)o)q*S!OrOhv!R!S!T!W#f#m#y#z#|#}$O$Q$S&a'y(R(y)o)q*SQ$Z!XR$]!YR#|!Q!OtOhv!R!S!T!W#f#m#y#z#|#}$O$Q$S&a'y(R(y)o)q*SR&W#{R#}!QR&b$VT(Q&a(RQvOQ#fh^#pv#f$O$Q$S)o*SQ$O!RQ$Q!SQ$S!TQ)o(yR*S)q!Q^Ohv!R!S!T!W#f#m#y#z#{#|#}$O$Q$S&a'y(R(y)o)q*SQ!fVp!s[!e!v!{#h#n$l$p$t%T%q&U'k'{(t)jd!|^!f!s#i#k$v${$|%y*_!z#ijk!U!Z#P#R#S#W#X#Y#Z#[#]#^#_#`#a#g#x$a$m$o%U%x&W&`&j&u'S'Z'f'i'o'}(O(U(W)O)Q)])d)t)w){Q#koW$v!k$q's)lQ${!oS$|!p'TS%y#q%{R*_#dQ!`TR$c!`h!u[!e!{#h#n$l$p$t&U'{(t)jU%S!u%T'jQ%T!vT'j%q'kQ'U%OR(e'UQ'g%eR(n'gQ%{#qR'p%{Q)e(fR)})eQ$r!iR&z$rQ$x!lR&}$xQ$n!gR&t$nQ)^(XR)z)^Q([&mR)b([![pOVhv!R!S!T!W!k#f#m#y#z#{#|#}$O$Q$S$q&a's'y(R(y)l)o)q*SU!}^!f$vT#lp!}Q)m(wR*Q)mQ%W!xR'^%WQ(R&aR)U(RluOhv!R!S!T#f$O$Q$S(y)o)q*SQ$W!WQ%v#mQ&S#yQ&T#zQ&Y#|Q&Z#}S(Q&a(RR(}'yR(x's%bnOV[^hjkov!R!S!T!U!W!Z!e!f!k!o!p!s!v!{#P#R#S#W#X#Y#Z#[#]#^#_#`#a#d#f#g#h#i#k#m#n#q#x#y#z#{#|#}$O$Q$S$l$m$o$p$q$t$v${$|%T%U%q%x%y%{&U&W&`&a&u'S'T'Z'f'i'k'o's'y'{'}(O(R(U(t(y)O)Q)d)j)l)o)q)t)w*S*_Z&l$a&j(W)]){Q!]SQ#v|Q&R#wR'P*[$oROSVhjkv|!R!S!T!U!W!Z!e#O#P#Q#R#S#W#X#Y#Z#[#]#^#_#`#a#f#g#m#s#w#x#y#z#{#|#}$O$Q$S$`$a$l$o%U%]%c%x&P&W&`&a&j&u'Z'c'f'i'o'w'y'}(O(R(U(W(Z(k(y)O)Q)])d)o)q)t)w){*S*[Q&n$aQ(X&jS)[(W){R)y)]!OgOhv!R!S!T!W#f#m#y#z#|#}$O$Q$S&a'y(R(y)o)q*SS!dV#xQ#bjQ#jkQ$U!UQ$^!ZQ%a#PQ%d#RY%e#S#{'})Q)wQ%g#WQ%h#XQ%i#YQ%j#ZQ%k#[Q%l#]Q%m#^Q%n#_Q%o#`Q%p#aQ%t#gW&i$a&j)]){Q&v$oU'X%U'Z)dQ'n%xQ'|&WQ(P&`Q(`&uQ(m'fQ(o'iQ(q'oQ)S(OQ)X(UQ)Z(WQ)s)OR*U)t#{aOVhjkv!R!S!T!U!W!Z#P#R#S#W#X#Y#Z#[#]#^#_#`#a#f#g#m#x#y#z#{#|#}$O$Q$S$a$o%U%x&W&`&a&j&u'Z'f'i'o'y'}(O(R(U(W(y)O)Q)])d)o)q)t)w){*S#z`OVhjkv!R!S!T!U!W!Z#P#R#S#W#X#Y#Z#[#]#^#_#`#a#f#g#m#x#y#z#{#|#}$O$Q$S$a$o%U%x&W&`&a&j&u'Z'f'i'o'y'}(O(R(U(W(y)O)Q)])d)o)q)t)w){*SR%Y#OR%P!p#xdOhjkv!R!S!T!U!W!Z#P#R#S#W#X#Y#Z#[#]#^#_#`#a#f#g#m#x#y#z#{#|#}$O$Q$S$a$o%U%x&W&`&a&j&u'Z'f'i'o'y'}(O(R(U(W(y)O)Q)])d)o)q)t)w){*SQ!gVQ%O!pQ%r#dQ&s$mQ(c'SR(d'T!O[Ohv!R!S!T!W#f#m#y#z#|#}$O$Q$S&a'y(R(y)o)q*SQ!eVU!{^#i$|#O#hjk!U!Z!p#P#R#S#W#X#Y#Z#[#]#^#_#`#a#g#x$a$m$o%U%x&W&`&j&u'S'T'Z'f'i'o'}(O(U(W)O)Q)])d)t)w){Q#nsQ$l!fQ$p!hS$t!k$qQ%q#dQ&U#{Q'k*_Q'{&VS(t's)lR)j(u$p]OV^hjksv!R!S!T!U!W!Z!f!h!k!p#P#R#S#W#X#Y#Z#[#]#^#_#`#a#d#f#g#i#m#x#y#z#{#|#}$O$Q$S$a$m$o$q$|%U%x&V&W&`&a&j&u'S'T'Z'f'i'o's'y'}(O(R(U(W(u(y)O)Q)])d)l)o)q)t)w){*S*_Q#qwQ%}#rR'b%^${WOV^hjksvw!R!S!T!U!W!Z!f!h!k!o!p#P#R#S#W#X#Y#Z#[#]#^#_#`#a#d#f#g#i#m#r#x#y#z#{#|#}$O$Q$S$a$m$o$q${$|%U%^%x&V&W&`&a&j&u'S'T'Z'f'i'o's'y'}(O(R(U(W(u(y)O)Q)])d)l)o)q)t)w){*S*_Q'R$}R(b'QQ%f#SQ&X#{Q)R'}Q)u)QR*W)wR(g'ZQ'[%UQ(f'ZR)|)dQ!jVR$u!k^!w[!P#n#o$i%V&xS$h!e$tQ&w$pQ'z&US(v's)lQ)P'{R)k(uR!mVR(Y&jR&n$a!goOV^hpv!R!S!T!W!f!k!}#f#m#y#z#{#|#}$O$Q$S$q$v&a's'y(R(y)l)o)q*SU!y[!P&UV%w#n#o'{",
  nodeNames: "⚠ LineComment BlockComment Program } FunctionDeclaration def Definition ( ) FunctionParameters FunctionParameter Modifiers MarkerAnnotation Identifier ScopedIdentifier . Annotation AnnotationArgumentList AssignmentExpression FieldAccess IntegerLiteral FloatingPointLiteral BooleanLiteral CharacterLiteral StringLiteral TextBlock null this ParenthesizedExpression ObjectCreationExpression new TypeArguments void PrimitiveType TypeName ScopedTypeName GenericType ArrayType ] Dimension [ AnnotatedType Wildcard extends super , ArgumentList ArrayAccess MethodInvocation MethodName MethodReference ArrayCreationExpression Dimension { ArrayInitializer AssignOp AssignOp BinaryExpression CompareOp CompareOp LogicOp LogicOp BitOp BitOp BitOp ArithOp ArithOp ArithOp BitOp InstanceofExpression instanceof LambdaExpression FormalParameters ReceiverParameter FormalParameter SpreadParameter VariableDeclarator InferredParameters Block TernaryExpression LogicOp : UpdateExpression UpdateOp UnaryExpression LogicOp BitOp CastExpression ElementValueArrayInitializer ElementValuePair public protected private abstract static final strictfp default synchronized native transient volatile ; ImportDeclaration import Asterisk ExpressionStatement LabeledStatement Label IfStatement if else WhileStatement while ForStatement foreach ForSpec LocalVariableDeclaration var EnhancedForStatement ForSpec IndexDefBlock index_def_begin index_def_end IndexDefineBlock index_define_begin index_define_end ExpressionDefineBlock expression_define_begin expression_define_end AssertStatement assert SwitchStatement switch SwitchBlock SwitchLabel case DoStatement do BreakStatement break ContinueStatement continue ReturnStatement return",
  maxTerm: 205,
  nodeProps: [
    ["isolate", -4,1,2,24,25,""],
    ["openedBy", 4,"{",9,"("],
    ["group", -20,5,79,103,104,107,108,110,113,115,118,120,122,125,128,131,133,138,140,142,144,"Statement",-24,14,19,20,21,22,23,24,25,26,27,28,29,30,48,49,51,52,58,70,72,80,83,85,88,"Expression",-7,33,34,35,36,37,38,42,"Type"],
    ["closedBy", 8,")",54,"}"]
  ],
  propSources: [javaHighlighting],
  skippedNodes: [0,1,2],
  repeatNodeCount: 17,
  tokenData: "!LU_R!_OX%QXY'fYZ)bZ^'f^p%Qpq'fqr*|rs,^st%Qtu4euv5qvw7Rwx8ixyAQyzAnz{B[{|CQ|}Dh}!OEU!O!PFo!P!Q! i!Q!R!,_!R![!0V![!]!>g!]!^!?w!^!_!@e!_!`!BO!`!a!Br!a!b!D`!b!c!EO!c!}!El!}#O!Fx#O#P%Q#P#Q!Gf#Q#R!HS#R#S4e#S#T%Q#T#o4e#o#p!Hv#p#q!Id#q#r!Jz#r#s!Kh#s#y%Q#y#z'f#z$f%Q$f$g'f$g#BY%Q#BY#BZ'f#BZ$IS%Q$IS$I_'f$I_$I|%Q$I|$JO'f$JO$JT%Q$JT$JU'f$JU$KV%Q$KV$KW'f$KW&FU%Q&FU&FV'f&FV;'S%Q;'S;=`&s<%lO%QS%VV${SOY%QYZ%lZr%Qrs%qs;'S%Q;'S;=`&s<%lO%QS%qO${SS%tVOY&ZYZ%lZr&Zrs&ys;'S&Z;'S;=`'`<%lO&ZS&^VOY%QYZ%lZr%Qrs%qs;'S%Q;'S;=`&s<%lO%QS&vP;=`<%l%QS&|UOY&ZYZ%lZr&Zs;'S&Z;'S;=`'`<%lO&ZS'cP;=`<%l&Z_'mk${S$kZOX%QXY'fYZ)bZ^'f^p%Qpq'fqr%Qrs%qs#y%Q#y#z'f#z$f%Q$f$g'f$g#BY%Q#BY#BZ'f#BZ$IS%Q$IS$I_'f$I_$I|%Q$I|$JO'f$JO$JT%Q$JT$JU'f$JU$KV%Q$KV$KW'f$KW&FU%Q&FU&FV'f&FV;'S%Q;'S;=`&s<%lO%Q_)iY${S$kZX^*Xpq*X#y#z*X$f$g*X#BY#BZ*X$IS$I_*X$I|$JO*X$JT$JU*X$KV$KW*X&FU&FV*XZ*^Y$kZX^*Xpq*X#y#z*X$f$g*X#BY#BZ*X$IS$I_*X$I|$JO*X$JT$JU*X$KV$KW*X&FU&FV*XV+TX!xP${SOY%QYZ%lZr%Qrs%qs!_%Q!_!`+p!`;'S%Q;'S;=`&s<%lO%QU+wV!]Q${SOY%QYZ%lZr%Qrs%qs;'S%Q;'S;=`&s<%lO%QT,aXOY,|YZ%lZr,|rs3Ys#O,|#O#P2d#P;'S,|;'S;=`3S<%lO,|T-PXOY-lYZ%lZr-lrs.^s#O-l#O#P.x#P;'S-l;'S;=`2|<%lO-lT-qX${SOY-lYZ%lZr-lrs.^s#O-l#O#P.x#P;'S-l;'S;=`2|<%lO-lT.cViPOY&ZYZ%lZr&Zrs&ys;'S&Z;'S;=`'`<%lO&ZT.}V${SOY-lYZ/dZr-lrs1]s;'S-l;'S;=`2|<%lO-lT/iW${SOY0RZr0Rrs0ns#O0R#O#P0s#P;'S0R;'S;=`1V<%lO0RP0UWOY0RZr0Rrs0ns#O0R#O#P0s#P;'S0R;'S;=`1V<%lO0RP0sOiPP0vTOY0RYZ0RZ;'S0R;'S;=`1V<%lO0RP1YP;=`<%l0RT1`XOY,|YZ%lZr,|rs1{s#O,|#O#P2d#P;'S,|;'S;=`3S<%lO,|T2QUiPOY&ZYZ%lZr&Zs;'S&Z;'S;=`'`<%lO&ZT2gVOY-lYZ/dZr-lrs1]s;'S-l;'S;=`2|<%lO-lT3PP;=`<%l-lT3VP;=`<%l,|T3_ViPOY&ZYZ%lZr&Zrs3ts;'S&Z;'S;=`'`<%lO&ZT3yR$ySXY4SYZ4`pq4SP4VRXY4SYZ4`pq4SP4eO$zP_4la$nZ${SOY%QYZ%lZr%Qrs%qst%Qtu4eu!Q%Q!Q![4e![!c%Q!c!}4e!}#R%Q#R#S4e#S#T%Q#T#o4e#o;'S%Q;'S;=`&s<%lO%QU5xX!fQ${SOY%QYZ%lZr%Qrs%qs!_%Q!_!`6e!`;'S%Q;'S;=`&s<%lO%QU6lV!YQ${SOY%QYZ%lZr%Qrs%qs;'S%Q;'S;=`&s<%lO%QV7YZ%[R${SOY%QYZ%lZr%Qrs%qsv%Qvw7{w!_%Q!_!`6e!`;'S%Q;'S;=`&s<%lO%QU8SV!_Q${SOY%QYZ%lZr%Qrs%qs;'S%Q;'S;=`&s<%lO%QT8nZ${SOY9aYZ%lZr9ars:osw9awx%Qx#O9a#O#P;y#P;'S9a;'S;=`@z<%lO9aT9fX${SOY%QYZ%lZr%Qrs%qsw%Qwx:Rx;'S%Q;'S;=`&s<%lO%QT:YVhP${SOY%QYZ%lZr%Qrs%qs;'S%Q;'S;=`&s<%lO%QT:rXOY&ZYZ%lZr&Zrs&ysw&Zwx;_x;'S&Z;'S;=`'`<%lO&ZT;dVhPOY%QYZ%lZr%Qrs%qs;'S%Q;'S;=`&s<%lO%QT<OZ${SOY<qYZ%lZr<qrs=isw<qwx9ax#O<q#O#P9a#P;'S<q;'S;=`?T<%lO<qT<vZ${SOY<qYZ%lZr<qrs=isw<qwx:Rx#O<q#O#P%Q#P;'S<q;'S;=`?T<%lO<qT=lZOY>_YZ%lZr>_rs?Zsw>_wx;_x#O>_#O#P&Z#P;'S>_;'S;=`@t<%lO>_T>bZOY<qYZ%lZr<qrs=isw<qwx:Rx#O<q#O#P%Q#P;'S<q;'S;=`?T<%lO<qT?WP;=`<%l<qT?^ZOY>_YZ%lZr>_rs@Psw>_wx;_x#O>_#O#P&Z#P;'S>_;'S;=`@t<%lO>_P@SVOY@PZw@Pwx@ix#O@P#P;'S@P;'S;=`@n<%lO@PP@nOhPP@qP;=`<%l@PT@wP;=`<%l>_T@}P;=`<%l9a_AXVWZ${SOY%QYZ%lZr%Qrs%qs;'S%Q;'S;=`&s<%lO%QVAuVXR${SOY%QYZ%lZr%Qrs%qs;'S%Q;'S;=`&s<%lO%QVBeX#^P${S!eQOY%QYZ%lZr%Qrs%qs!_%Q!_!`6e!`;'S%Q;'S;=`&s<%lO%QVCXZ!dR${SOY%QYZ%lZr%Qrs%qs{%Q{|Cz|!_%Q!_!`6e!`;'S%Q;'S;=`&s<%lO%QVDRV!vR${SOY%QYZ%lZr%Qrs%qs;'S%Q;'S;=`&s<%lO%QVDoV!OR${SOY%QYZ%lZr%Qrs%qs;'S%Q;'S;=`&s<%lO%QVE][!dR${SOY%QYZ%lZr%Qrs%qs}%Q}!OCz!O!_%Q!_!`6e!`!aFR!a;'S%Q;'S;=`&s<%lO%QVFYV%aR${SOY%QYZ%lZr%Qrs%qs;'S%Q;'S;=`&s<%lO%Q_FvZ`Y${SOY%QYZ%lZr%Qrs%qs!O%Q!O!PGi!P!Q%Q!Q![Hw![;'S%Q;'S;=`&s<%lO%QVGnX${SOY%QYZ%lZr%Qrs%qs!O%Q!O!PHZ!P;'S%Q;'S;=`&s<%lO%QVHbV%_R${SOY%QYZ%lZr%Qrs%qs;'S%Q;'S;=`&s<%lO%QTIOc${SfPOY%QYZ%lZr%Qrs%qs!Q%Q!Q![Hw![!f%Q!f!gJZ!g!hJw!h!iJZ!i#R%Q#R#SNq#S#W%Q#W#XJZ#X#YJw#Y#ZJZ#Z;'S%Q;'S;=`&s<%lO%QTJbV${SfPOY%QYZ%lZr%Qrs%qs;'S%Q;'S;=`&s<%lO%QTJ|]${SOY%QYZ%lZr%Qrs%qs{%Q{|Ku|}%Q}!OKu!O!Q%Q!Q![Lg![;'S%Q;'S;=`&s<%lO%QTKzX${SOY%QYZ%lZr%Qrs%qs!Q%Q!Q![Lg![;'S%Q;'S;=`&s<%lO%QTLnc${SfPOY%QYZ%lZr%Qrs%qs!Q%Q!Q![Lg![!f%Q!f!gJZ!g!h%Q!h!iJZ!i#R%Q#R#SMy#S#W%Q#W#XJZ#X#Y%Q#Y#ZJZ#Z;'S%Q;'S;=`&s<%lO%QTNOZ${SOY%QYZ%lZr%Qrs%qs!Q%Q!Q![Lg![#R%Q#R#SMy#S;'S%Q;'S;=`&s<%lO%QTNvZ${SOY%QYZ%lZr%Qrs%qs!Q%Q!Q![Hw![#R%Q#R#SNq#S;'S%Q;'S;=`&s<%lO%Q_! p]${S!eQOY%QYZ%lZr%Qrs%qsz%Qz{!!i{!P%Q!P!Q!)[!Q!_%Q!_!`6e!`;'S%Q;'S;=`&s<%lO%Q_!!nX${SOY!!iYZ!#ZZr!!irs!$vsz!!iz{!&U{;'S!!i;'S;=`!'j<%lO!!i_!#`T${SOz!#oz{!$R{;'S!#o;'S;=`!$p<%lO!#oZ!#rTOz!#oz{!$R{;'S!#o;'S;=`!$p<%lO!#oZ!$UVOz!#oz{!$R{!P!#o!P!Q!$k!Q;'S!#o;'S;=`!$p<%lO!#oZ!$pOQZZ!$sP;=`<%l!#o_!$yXOY!%fYZ!#ZZr!%frs!'psz!%fz{!(`{;'S!%f;'S;=`!)U<%lO!%f_!%iXOY!!iYZ!#ZZr!!irs!$vsz!!iz{!&U{;'S!!i;'S;=`!'j<%lO!!i_!&ZZ${SOY!!iYZ!#ZZr!!irs!$vsz!!iz{!&U{!P!!i!P!Q!&|!Q;'S!!i;'S;=`!'j<%lO!!i_!'TV${SQZOY%QYZ%lZr%Qrs%qs;'S%Q;'S;=`&s<%lO%Q_!'mP;=`<%l!!i_!'sXOY!%fYZ!#ZZr!%frs!#osz!%fz{!(`{;'S!%f;'S;=`!)U<%lO!%f_!(cZOY!!iYZ!#ZZr!!irs!$vsz!!iz{!&U{!P!!i!P!Q!&|!Q;'S!!i;'S;=`!'j<%lO!!i_!)XP;=`<%l!%f_!)cV${SPZOY!)[YZ%lZr!)[rs!)xs;'S!)[;'S;=`!+O<%lO!)[_!)}VPZOY!*dYZ%lZr!*drs!+Us;'S!*d;'S;=`!,X<%lO!*d_!*iVPZOY!)[YZ%lZr!)[rs!)xs;'S!)[;'S;=`!+O<%lO!)[_!+RP;=`<%l!)[_!+ZVPZOY!*dYZ%lZr!*drs!+ps;'S!*d;'S;=`!,X<%lO!*dZ!+uSPZOY!+pZ;'S!+p;'S;=`!,R<%lO!+pZ!,UP;=`<%l!+p_!,[P;=`<%l!*dT!,fu${SePOY%QYZ%lZr%Qrs%qs!O%Q!O!P!.y!P!Q%Q!Q![!0V![!d%Q!d!e!3a!e!f%Q!f!gJZ!g!hJw!h!iJZ!i!n%Q!n!o!1{!o!q%Q!q!r!5_!r!z%Q!z!{!7V!{#R%Q#R#S!2i#S#U%Q#U#V!3a#V#W%Q#W#XJZ#X#YJw#Y#ZJZ#Z#`%Q#`#a!1{#a#c%Q#c#d!5_#d#l%Q#l#m!7V#m;'S%Q;'S;=`&s<%lO%QT!/Qa${SfPOY%QYZ%lZr%Qrs%qs!Q%Q!Q![Hw![!f%Q!f!gJZ!g!hJw!h!iJZ!i#W%Q#W#XJZ#X#YJw#Y#ZJZ#Z;'S%Q;'S;=`&s<%lO%QT!0^i${SePOY%QYZ%lZr%Qrs%qs!O%Q!O!P!.y!P!Q%Q!Q![!0V![!f%Q!f!gJZ!g!hJw!h!iJZ!i!n%Q!n!o!1{!o#R%Q#R#S!2i#S#W%Q#W#XJZ#X#YJw#Y#ZJZ#Z#`%Q#`#a!1{#a;'S%Q;'S;=`&s<%lO%QT!2SV${SePOY%QYZ%lZr%Qrs%qs;'S%Q;'S;=`&s<%lO%QT!2nZ${SOY%QYZ%lZr%Qrs%qs!Q%Q!Q![!0V![#R%Q#R#S!2i#S;'S%Q;'S;=`&s<%lO%QT!3fY${SOY%QYZ%lZr%Qrs%qs!Q%Q!Q!R!4U!R!S!4U!S;'S%Q;'S;=`&s<%lO%QT!4]`${SePOY%QYZ%lZr%Qrs%qs!Q%Q!Q!R!4U!R!S!4U!S!n%Q!n!o!1{!o#R%Q#R#S!3a#S#`%Q#`#a!1{#a;'S%Q;'S;=`&s<%lO%QT!5dX${SOY%QYZ%lZr%Qrs%qs!Q%Q!Q!Y!6P!Y;'S%Q;'S;=`&s<%lO%QT!6W_${SePOY%QYZ%lZr%Qrs%qs!Q%Q!Q!Y!6P!Y!n%Q!n!o!1{!o#R%Q#R#S!5_#S#`%Q#`#a!1{#a;'S%Q;'S;=`&s<%lO%QT!7[_${SOY%QYZ%lZr%Qrs%qs!O%Q!O!P!8Z!P!Q%Q!Q![!:i![!c%Q!c!i!:i!i#T%Q#T#Z!:i#Z;'S%Q;'S;=`&s<%lO%QT!8`]${SOY%QYZ%lZr%Qrs%qs!Q%Q!Q![!9X![!c%Q!c!i!9X!i#T%Q#T#Z!9X#Z;'S%Q;'S;=`&s<%lO%QT!9^c${SOY%QYZ%lZr%Qrs%qs!Q%Q!Q![!9X![!c%Q!c!i!9X!i!r%Q!r!sJw!s#R%Q#R#S!8Z#S#T%Q#T#Z!9X#Z#d%Q#d#eJw#e;'S%Q;'S;=`&s<%lO%QT!:pi${SePOY%QYZ%lZr%Qrs%qs!O%Q!O!P!<_!P!Q%Q!Q![!:i![!c%Q!c!i!:i!i!n%Q!n!o!1{!o!r%Q!r!sJw!s#R%Q#R#S!=i#S#T%Q#T#Z!:i#Z#`%Q#`#a!1{#a#d%Q#d#eJw#e;'S%Q;'S;=`&s<%lO%QT!<da${SOY%QYZ%lZr%Qrs%qs!Q%Q!Q![!9X![!c%Q!c!i!9X!i!r%Q!r!sJw!s#T%Q#T#Z!9X#Z#d%Q#d#eJw#e;'S%Q;'S;=`&s<%lO%QT!=n]${SOY%QYZ%lZr%Qrs%qs!Q%Q!Q![!:i![!c%Q!c!i!:i!i#T%Q#T#Z!:i#Z;'S%Q;'S;=`&s<%lO%QV!>nX!tR${SOY%QYZ%lZr%Qrs%qs![%Q![!]!?Z!];'S%Q;'S;=`&s<%lO%QV!?bV%XR${SOY%QYZ%lZr%Qrs%qs;'S%Q;'S;=`&s<%lO%QV!@OV#ZR${SOY%QYZ%lZr%Qrs%qs;'S%Q;'S;=`&s<%lO%QV!@lY%OR${SOY%QYZ%lZr%Qrs%qs!^%Q!^!_!A[!_!`+p!`;'S%Q;'S;=`&s<%lO%QU!AcX!gQ${SOY%QYZ%lZr%Qrs%qs!_%Q!_!`6e!`;'S%Q;'S;=`&s<%lO%QV!BVX!ZR${SOY%QYZ%lZr%Qrs%qs!_%Q!_!`+p!`;'S%Q;'S;=`&s<%lO%QV!ByY$}R${SOY%QYZ%lZr%Qrs%qs!_%Q!_!`+p!`!a!Ci!a;'S%Q;'S;=`&s<%lO%QU!CpY!gQ${SOY%QYZ%lZr%Qrs%qs!_%Q!_!`6e!`!a!A[!a;'S%Q;'S;=`&s<%lO%Q_!DiV%UX!sQ${SOY%QYZ%lZr%Qrs%qs;'S%Q;'S;=`&s<%lO%Q_!EVV$rZ${SOY%QYZ%lZr%Qrs%qs;'S%Q;'S;=`&s<%lO%Q_!Esa$oZ${SOY%QYZ%lZr%Qrs%qst%Qtu!Elu!Q%Q!Q![!El![!c%Q!c!}!El!}#R%Q#R#S!El#S#T%Q#T#o!El#o;'S%Q;'S;=`&s<%lO%QV!GPVyR${SOY%QYZ%lZr%Qrs%qs;'S%Q;'S;=`&s<%lO%QV!GmVwR${SOY%QYZ%lZr%Qrs%qs;'S%Q;'S;=`&s<%lO%QU!HZX!cQ${SOY%QYZ%lZr%Qrs%qs!_%Q!_!`6e!`;'S%Q;'S;=`&s<%lO%QV!H}V!WR${SOY%QYZ%lZr%Qrs%qs;'S%Q;'S;=`&s<%lO%QU!IkZ!bQ${SOY%QYZ%lZr%Qrs%qs!_%Q!_!`6e!`#p%Q#p#q!J^#q;'S%Q;'S;=`&s<%lO%QU!JeV!`Q${SOY%QYZ%lZr%Qrs%qs;'S%Q;'S;=`&s<%lO%QV!KRVSR${SOY%QYZ%lZr%Qrs%qs;'S%Q;'S;=`&s<%lO%QT!KoV!yP${SOY%QYZ%lZr%Qrs%qs;'S%Q;'S;=`&s<%lO%Q",
  tokenizers: [0, 1, 2, 3],
  topRules: {"Program":[0,3]},
  dynamicPrecedences: {"37":1,"174":-1,"189":-1},
  specialized: [{term: 168, get: (value) => spec_identifier[value] || -1}],
  tokenPrec: 4447
});

// @ts-ignore
const parser = parser$1;
/// A language provider based on the [Lezer Java
/// parser](https://github.com/lezer-parser/java), extended with
/// highlighting and indentation information.
const mvelLanguage = language.LRLanguage.define({
    name: "mvel",
    parser: parser.configure({
        props: [
            language.indentNodeProp.add({
                IfStatement: language.continuedIndent({ except: /^\s*({|else\b)/ }),
                LabeledStatement: language.flatIndent,
                SwitchBlock: context => {
                    let after = context.textAfter, closed = /^\s*\}/.test(after), isCase = /^\s*(case|default)\b/.test(after);
                    return context.baseIndent + (closed ? 0 : isCase ? 1 : 2) * context.unit;
                },
                Block: language.delimitedIndent({ closing: "}" }),
                IndexDefineBlock: language.delimitedIndent({ closing: "index_define_end" }),
                IndexDefBlock: language.delimitedIndent({ closing: "index_def_end" }),
                ExpressionDefineBlock: language.delimitedIndent({ closing: "expression_define_end" }),
                BlockComment: () => null,
                Statement: language.continuedIndent({ except: /^{/ })
            }),
            language.foldNodeProp.add({
                ["Block SwitchBlock ClassBody ElementValueArrayInitializer ModuleBody EnumBody " +
                    "ConstructorBody InterfaceBody ArrayInitializer IndexDefineBlock IndexDefBlock ExpressionDefineBlock"]: language.foldInside,
                BlockComment(tree) { return { from: tree.from + 2, to: tree.to - 2 }; }
            })
        ]
    }),
    languageData: {
        commentTokens: { line: "//", block: { open: "/*", close: "*/" } },
        indentOnInput: /^\s*(?:case |default:|\{|\})$/
    }
});
/// Java language support.
function mvel() {
    return new language.LanguageSupport(mvelLanguage);
}

exports.mvel = mvel;
exports.mvelLanguage = mvelLanguage;
